#include <iostream>
#include <vector>

using namespace std;

void hanoi(int n, int from_rod, int to_rod, int aux_rod, vector<vector<int>>& moves) {
    if (n == 1) {
        moves.push_back({from_rod, to_rod});
        return;
    }
    hanoi(n - 1, from_rod, aux_rod, to_rod, moves);
    moves.push_back({from_rod, to_rod});
    hanoi(n - 1, aux_rod, to_rod, from_rod, moves);
}

vector<vector<int>> solution(int n) {
    vector<vector<int>> moves;
    hanoi(n, 1, 3, 2, moves);
    return moves;
}

int main() {
    int n = 8;
    vector<vector<int>> result = solution(n);

    // 결과 출력
    cout << "[";
    for (int i = 0; i < result.size(); ++i) {
        cout << "[";
        for (int j = 0; j < result[i].size(); ++j) {
            cout << result[i][j];
            if (j != result[i].size() - 1) cout << ", ";
        }
        cout << "]";
        if (i != result.size() - 1) cout << ", ";
    }
    cout << "]" << endl;

    return 0;
}
